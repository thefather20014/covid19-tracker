{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","helpers/GetApi.js","components/Chart/Chart.jsx","hooks/GetApiHook.js","components/CountryPicker/CounterPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CounterPicker.module.css","Images/image.png"],"names":["module","exports","useStyles","makeStyles","root","color","Cards","data","confirmed","recovered","deaths","lastUpdate","classes","className","styles","container","Grid","spacing","justify","item","xs","md","cx","infected","card","component","Card","Typography","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","role","aria-label","API_URL","getData","country","a","changeUrl","axios","get","console","error","getFilterData","modifiedData","map","dailyData","total","date","reportDate","getCountries","countries","name","Chart","useState","daily","setDaily","useEffect","then","res","catch","err","log","GetDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Styles","CounterPicker","search","setSearch","setCountries","unshift","GetCountriesData","FormControl","formControl","Select","labelId","id","onChange","e","target","index","MenuItem","key","App","loading","api","setApi","CustomGetApi","src","image","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fb9ebb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2iN1N\",\"card\":\"Cards_card__lF2Ra\",\"infected\":\"Cards_infected__xNgvF\",\"recovered\":\"Cards_recovered__2ngX8\",\"deaths\":\"Cards_deaths__3l3un\"};","import React from 'react'\r\nimport { Card, Typography, Grid, makeStyles } from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: 'rgb(108,107,108)'\r\n    },\r\n});\r\n\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!confirmed) {\r\n        return <Typography variant=\"h2\">Not Info <span role=\"img\" aria-label=\"emoji\">ü§¶‚Äç‚ôÇÔ∏è</span></Typography>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={5} justify=\"center\">\r\n\r\n                <Grid item xs={ 12 } md={ 3 } className={ cx(styles.infected, styles.card) } component={Card}>\r\n                    <Typography className={classes.root} gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography className={classes.root}> {new Date(lastUpdate).toDateString()} </Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={ 12 } md={ 3 } className={ cx(styles.recovered, styles.card) }>\r\n                    <Typography className={classes.root} gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography className={classes.root}> {new Date(lastUpdate).toDateString()} </Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={ 12 } md={ 3 } className={ cx(styles.deaths, styles.card) }>\r\n                    <Typography className={classes.root} gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography className={classes.root}> {new Date(lastUpdate).toDateString()} </Typography>\r\n                    <Typography variant=\"body2\">Number of  deaths caused by COVID-19</Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios';\r\n\r\nlet API_URL = ' https://covid19.mathdro.id/api';\r\n\r\nexport const getData = async ( country ) => {\r\n\r\n    let changeUrl = API_URL;\r\n\r\n    if( country !== 'Global' ) {\r\n        changeUrl = `${API_URL}/countries/${country}/`;\r\n    } else if  ( country === 'Global' ) {\r\n        changeUrl = API_URL;\r\n    }\r\n    \r\n    try \r\n    {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeUrl); \r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        };\r\n    }\r\n    catch(err) \r\n    {\r\n        console.error(err);\r\n    } \r\n\r\n};\r\n\r\nexport const getFilterData = async () => {\r\n    \r\n    try \r\n    {\r\n        const { data }  = await axios.get(`${ API_URL }/daily`); \r\n        const modifiedData = data.map(dailyData => ({\r\n                confirmed: dailyData.confirmed.total,\r\n                deaths: dailyData.deaths.total,\r\n                date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(err) \r\n    {\r\n        console.error(err);\r\n    } \r\n\r\n};\r\n\r\nexport const getCountries = async () => {\r\n\r\n    try \r\n    {\r\n        const { data: { countries } } = await axios.get(`${ API_URL }/countries`); \r\n        return countries.map( ({ name }) => name );\r\n    }\r\n    catch(err) \r\n    {\r\n        console.error(err);\r\n    } \r\n\r\n};\r\n","import React from 'react';\r\nimport { GetDailyData } from '../../hooks/GetApiHook';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport Styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\r\n    const data = GetDailyData();\r\n\r\n    const lineChart = (\r\n        data.length ? <Line\r\n            data={{\r\n                labels: data.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: data.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },\r\n                {\r\n                    data: data.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, .5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        /> : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ?\r\n            (<Bar\r\n\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 255, .5)',\r\n                            'rgba(0, 255, 0, .5)',\r\n                            'rgba(255, 0, 0, .5)',\r\n                        ],\r\n                        data: [ confirmed.value, recovered.value, deaths.value ]\r\n                    }]\r\n                }}\r\n\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` }\r\n                }}\r\n            />)\r\n            : null\r\n    );\r\n\r\n    return (\r\n        <div className={Styles.container}>\r\n            { country === 'Global' ? lineChart: barChart }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import { useState, useEffect } from 'react';\r\nimport { getData, getFilterData } from '../helpers/GetApi';\r\nimport { getCountries } from '../helpers/GetApi';\r\n\r\nexport const CustomGetApi = (country) => {\r\n    const [api, setApi] = useState({\r\n        data: [],\r\n        loading: false\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getData(country)\r\n            .then(res => setApi({ data: res, loading: true }))\r\n            .catch(err => console.log(err));\r\n\r\n    }, [country]);\r\n\r\n    return api\r\n};\r\n\r\nexport const GetDailyData = () => {\r\n    const [daily, setDaily] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getFilterData()\r\n            .then(res => setDaily(res))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    return daily\r\n};\r\n\r\nexport const GetCountriesData = ( country ) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCountries( country )\r\n            .then(res => {\r\n                res.unshift('Global')\r\n                setCountries(res);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [country]);\r\n\r\n    return countries\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Select, FormControl, MenuItem } from '@material-ui/core';\r\nimport Styles from './CounterPicker.module.css';\r\nimport { GetCountriesData } from '../../hooks/GetApiHook';\r\n\r\nconst CounterPicker = ({ search, setSearch }) => {\r\n\r\n    const countries = GetCountriesData();\r\n\r\n    const handleSearch = e => setSearch(e.target.value);;\r\n    return (\r\n        <div>\r\n            <FormControl className={Styles.formControl}>\r\n                <Select\r\n                    labelId=\"demo-mutiple-name-label\"\r\n                    id=\"demo-mutiple-name\"\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                >\r\n                    {countries.map((country, index) => (\r\n                        <MenuItem key={index} value={country}>\r\n                            {country}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterPicker\r\n","import React, { useState } from 'react'\r\nimport { Cards, Chart, CounterPicker } from './components/components';\r\nimport './App.css';\r\nimport { CustomGetApi } from './hooks/GetApiHook';\r\nimport { Typography} from '@material-ui/core';\r\nimport image from './Images/image.png'\r\n\r\nconst App = () => {\r\n\r\n    const [search, setSearch] = useState('Global');\r\n    const { data, loading } = CustomGetApi(search);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            { loading ? null: <Typography variant=\"h2\"> Loading.. </Typography> }\r\n\r\n            <img src={ image } alt=\"covid-19\"/>\r\n            <Cards data={ data } />\r\n            <CounterPicker search={ search } setSearch={ setSearch }/>\r\n            <Chart data={ data } country={ search }/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__jzRCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CounterPicker_formControl__22jlr\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}